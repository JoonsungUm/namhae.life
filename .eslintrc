{
  "extends": "next",
  "rules": {
    // "off" or 0 - turn the rule off
    // "warn" or 1 - turn the rule on as a warning (doesnâ€™t affect exit code)
    // "error" or 2 - turn the rule on as an error (exit code is 1 when triggered)
    "indent": [
      "error",
      2
    ],
    "semi": [
      "error",
      "never"
    ],
    "curly": "error",
    "eqeqeq": ["error", "always"],
    "func-names": "warn",
    "no-trailing-spaces": "warn",
    "keyword-spacing": "warn",
    "no-unused-vars": "warn",
    "no-multiple-empty-lines": "warn",
    "space-before-function-paren": "warn",
    "eol-last": "warn",
    "prefer-arrow-callback": "error", // Require using arrow functions for callbacks
    "require-await": "error",
    "arrow-parens": ["error", "as-needed"], // a => {}
    "no-param-reassign": ["error", { "props": false }],
    "no-unused-expressions": ["error", {
      "allowTernary": true,      // a || b
      "allowShortCircuit": true, // a ? b : 0
      "allowTaggedTemplates": true
    }],
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "max-len": ["error", {
      "code": 110,
      "ignoreComments": true,
      "ignoreStrings": true,
      "ignoreTemplateLiterals": true
    }]
  }
}
